'''

В этом задании нужно использовать флаг, но не используйте встроенные флаги и никак не изменяйте регулярное выражение - иначе оно не пройдёт проверку.

Если что, встроенный флаг - это флаг, который пишется в самом регулярном выражении.


Скомпилируйте следующее регулярное выражение, и запишите его в переменную pattern:

(?:
    (?:\s*[+>~,]\s*|\s+)
    |
    [^:+>~,\s\\[\]]+(?:\\.[^:+>~,\s\\[\]]*)*
)
|
\[(?:
    [^\\[\]]*(?:\\.[^\\[\]]*)*
    |
    [^=]+=~?\s*
    (?:
        "[^\\"]*(?:\\.[^"\\]*)*"
        |
        '[^\\']*(?:\\.[^'\\]*)*'
    )
)\]
|
:[^\\:([]+(?:\\.[^\\:([]*)*
(?:
    \((?:
        [^\\()]*(?:\\.[^\\()]*)*
        |
        "[^\\"]*(?:\\.[^"\\]*)*"
        |
        '[^\\']*(?:\\.[^'\\]*)*'
    )\)
)?

Что нужно сделать:

Нужно скомпилировать регулярное выражение выше и записать его в переменную pattern. Для того, чтобы выражение успешно скомпилировалось, нужно использовать флаг.
Тестовые данные:
Входные данные:

Нет
Выходные данные:

Нет

Sample Input:

Sample Output:

success!

'''

import re


pattern = re.compile(r"""
(?:
    (?:\s*[+>~,]\s*|\s+)
    |
    [^:+>~,\s\\[\]]+(?:\\.[^:+>~,\s\\[\]]*)*
)
|
\[(?:
    [^\\[\]]*(?:\\.[^\\[\]]*)*
    |
    [^=]+=~?\s*
    (?:
        "[^\\"]*(?:\\.[^"\\]*)*"
        |
        '[^\\']*(?:\\.[^'\\]*)*'
    )
)\]
|
:[^\\:([]+(?:\\.[^\\:([]*)*
(?:
    \((?:
        [^\\()]*(?:\\.[^\\()]*)*
        |
        "[^\\"]*(?:\\.[^"\\]*)*"
        |
        '[^\\']*(?:\\.[^'\\]*)*'
    )\)
)?
""", flags=re.X)
