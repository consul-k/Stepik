'''

–õ–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ n –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–æ–º n√ón, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∏ –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ n. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã: n —Å—Ç—Ä–æ–∫, –ø–æ n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, 
—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏ —Å–ª–æ–≤–æ NO, –µ—Å–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è.
–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢

Sample Input 1:

4
2 3 4 1
3 4 1 2
4 1 2 3
1 2 3 4

Sample Output 1:

YES

Sample Input 2:

3
1 2 3
3 2 1
2 3 4

Sample Output 2:

NO

'''

n = int(input())
matrix = [list(map(int, input().split())) for i in range(n)]
test_list = [i for i in range(1,n+1)]

check = True

for i in range(n):
    if set(matrix[i]) != set(test_list):
        check = False
        
zipped_rows = zip(*matrix)
t_matrix = [list(row) for row in zipped_rows]

for i in range(n):
    if set(t_matrix[i]) != set(test_list):
        check = False

if check:
    print('YES')
else:
    print('NO')
