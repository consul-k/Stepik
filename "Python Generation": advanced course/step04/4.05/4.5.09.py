'''

–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ nn –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ n√ónn√ón, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª 1,2,3,‚Ä¶,n**2 (—Ç–æ –µ—Å—Ç—å –≤—Å–µ —á–∏—Å–ª–∞ —Ä–∞–∑–Ω—ã–µ) —Ç–∞–∫, 
—á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã: nn —Å—Ç—Ä–æ–∫, –ø–æ nn —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, 
—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏ —Å–ª–æ–≤–æ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢

Sample Input 1:

3
8 1 6
3 5 7
4 9 2

Sample Output 1:

YES

Sample Input 2:

3
8 2 6
3 5 7
4 9 1

Sample Output 2:

NO

Sample Input 3:

3
4 9 2
3 5 7
8 1 6

Sample Output 3:

YES

'''

matrix = [list(map(int, input().split())) for i in range(int(input()))]

matrix_num = [int(i) for i in range(1,len(matrix)**2 + 1)]
matrix_check = []

for group in matrix:
    matrix_check.extend(group)

row = [sum(i) for i in matrix]
columns = [sum(col) for col in zip(*matrix)]

matrix_md = [] 
for i in range(len(matrix)):
    for j in range(len(matrix)):
        if i == j:
            matrix_md.append(matrix[i][j])

matrix_sd = []
for i in range(len(matrix)):
    for j in range(len(matrix)):
        if j == len(matrix) - i - 1:
            matrix_sd.append(matrix[i][j])
           
if sorted(matrix_check) == matrix_num and row == columns and sum(matrix_md) == sum(matrix_sd):
    print('YES')
else:
    print('NO')
